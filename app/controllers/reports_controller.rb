=begin
METRICS API

The SASHIMI API represents a RESTful implementation of SUSHI automation intended to returns COUNTER Research Data Release 1 reports

OpenAPI spec version: 1.0.0
Contact: support@datacite.org
Generated by: https://github.com/swagger-api/swagger-codegen.git

=end
class ReportsController < ApplicationController
  prepend_before_action :authenticate_user_from_token!
  before_action :set_report, only: [:show, :update, :destroy]
  before_action :set_user_hash, only: [:create, :update, :destroy]
  #authorize_resource :except => [:index, :show]

  def index
    render json: Report.all
  end

  def destroy
    # Your code here

    render json: {"message" => "yes, it worked"}
  end

  def show
    render json: @report
  end

  def update
    if @report.update_attributes(safe_params.merge(@user_hash))
      render json: @report
    else
      Rails.logger.warn @report.errors.inspect
      render json: serialize(@report.errors), status: :unprocessable_entity
    end
  end

  def create
    @report = Report.new(safe_params.merge(@user_hash))
    # authorize! :create, @report

    if @report.save
      render json: @report, status: :created
    else
      Rails.logger.warn @report.errors.inspect
      render json: @report.errors, status: :unprocessable_entity
    end
  end

  protected

  def set_report
    id = Base32::URL.decode(URI.decode(params[:id]))
    fail ActiveRecord::RecordNotFound unless id.present?

    @report = Report.where(id: id.to_i).first

    fail ActiveRecord::RecordNotFound unless @report.present?
  end

  def set_user_hash
    @user_hash = { client_id: current_user.client_id, provider_id: current_user.provider_id }
  end

  private

  def safe_params
    params.permit(:report_name, :report_id, :release, :created_by, report_attributes: [], report_filters: [], report_datasets: [:yop, :platform, :data_type, :publisher, { dataset_id: [:type, :value] }])

    # fail JSON::ParserError, "You need to provide a payload following the SUSHI spec" unless params[:report_header].present?
    # fail JSON::ParserError, "You need to provide a payload following the SUSHI spec" unless params[:report_datasets].present?
    # ActionController::Parameters.permit_all_parameters = true
    #header, datasets = params.require([:report_header, :report_datasets])
    #header.merge!({report_datasets: datasets})
  end
end
